buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.6.4"
        classpath "gradle.plugin.com.craigburke.gradle:karma-gradle:1.4.3"
        classpath "gradle.plugin.com.craigburke.gradle:bower-installer-gradle:2.5.1"
        classpath "org.grails.plugins:hibernate4:5.0.4"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.7.4"
		classpath "org.grails.plugins:views-gradle:1.0.12"
		
    }
}

version "1.1.2"
group "mms"

apply plugin:"eclipse"
apply plugin:"idea"
//apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.grails-gsp"
apply plugin:"com.craigburke.karma"
apply plugin:"com.craigburke.bower-installer"
apply plugin:"asset-pipeline"
apply plugin:"org.grails.plugins.views-json"

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    assets "com.craigburke.angular:angular-template-asset-pipeline:2.2.6"
    assets "com.craigburke.angular:angular-annotate-asset-pipeline:2.4.0"
    assets "com.craigburke:js-closure-wrap-asset-pipeline:1.2.0"
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    provided "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-codecs"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-datasource"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-async"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails.plugins:cache"
    compile "org.grails:grails-plugin-gsp"
    compile "org.grails.plugins:hibernate4"
    compile "org.hibernate:hibernate-ehcache"
    compile "org.grails.plugins:views-json:1.0.12"
    runtime "org.grails.plugins:spring-security-core:3.0.2"
    compile "org.grails.plugins:spring-security-rest:2.0.0.M2"
    console "org.grails:grails-console"
    profile "org.grails.profiles:angular:3.1.5"
    runtime "com.h2database:h2"
    runtime "org.grails.plugins:asset-pipeline"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"
    testCompile "org.grails:grails-datastore-rest-client"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"    
    runtime 'org.grails.plugins:grails-console:2.0.5'
    runtime "mysql:mysql-connector-java:5.1.29"	
	// SVNKit
	compile "org.tmatesoft.svnkit:svnkit:1.8.10"	
	compile "org.grails.plugins:quartz:2.0.9"
	compile 'org.grails.plugins:quartz-monitor:1.3'
	// Excel Export
	compile 'org.apache.poi:poi-ooxml:3.13'
	compile 'org.apache.poi:ooxml-schemas:1.1'

}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}
bower {
    'angular'('1.4.x') {
        source 'angular.js'
    }
    'angular-resource'('1.4.x') {
        source 'angular-resource.js' >> '/angular/'
    }
    'angular-mocks'('1.4.x') {
        source 'angular-mocks.js' >> '/angular/'
    }
    'angular-bootstrap'('1.3.x') {
        source 'ui-bootstrap-tpls.js' >> '/angular/'
    }
    'bootstrap'('3.x.x') {
        source 'dist/css/bootstrap.min.css' >> '/bootstrap/css/'
        source 'dist/css/bootstrap-theme.min.css' >> '/bootstrap/css/'
        source 'dist/js/bootstrap.min.js' >> '/bootstrap/js/'
        source 'dist/fonts/*' >> '/bootstrap/fonts/'
    }
    'angular-xeditable'('0.1.8')
    'ng-notify'('0.7.1')
    'pace'('1.0.0')
    'animate.css'('3.5.1')
    'angular-ui-tree'('2.16.0')
    'angular-ui-router'('0.3.1')
	'lodash'('1.3.0')
	//'restangular'('1.5.1')
	'angular-file-saver'('1.1.2')
	'datatables.net'('1.10.12')
	'datatables.net-bs'('1.10.12')
	'angular-datatables'('v0.5.4')	
	'ngprogress'('1.1.2')
}

/**
 *  Config Options:
 *  https://github.com/craigburke/karma-gradle 
 *  http://karma-runner.github.io/0.13/config/configuration-file.html
 *
 **/
 karma {
 
	dependencies(['karma-wrap-preprocessor'])
	
	profile('angularJS') 
	
	browsers = ['Chrome']
	
	//urlRoot = '/mms/'
		
	captureTimeout = 600000
	
	//  This needs to be included so that mms.js and mms.header.js before all other application files to avoid "Module 'mms' or 'mms.header' is not available!" error during testing
	 files = [
		 "grails-app/assets/bower/**/jquery.js",
		 "**/assets/bower_components/**/jquery.js",
		 "**/assets/bower/**/jquery.js",
		 "**/assets/vendor/**/jquery.js",
		 "**/assets/libs/**/jquery.js",
		 "grails-app/assets/bower/**/angular.js",
		 "**/assets/bower_components/**/angular.js",
		 "**/assets/bower/**/angular.js",
		 "**/assets/vendor/**/angular.js",
		 "**/assets/libs/**/angular.js",
		 "grails-app/assets/bower/**/*.js",
		 "**/assets/bower_components/**/*.js",
		 "**/assets/bower/**/*.js",
		 "**/assets/vendor/**/*.js",
		 "**/assets/libs/**/*.js",
		 "grails-app/assets/javascripts/mms/mms.js",
		 "grails-app/assets/javascripts/mms/domain/mms.header.js",
		 "grails-app/assets/**/app.js",
		 "grails-app/assets/**/application.js",
		 "grails-app/assets/**/*.module.js",
		 "grails-app/assets/**/!(controllers|directives|services|domain|conf|config)/*!(Spec|spec).js",
		 "grails-app/assets/**/*!(Spec|spec).js",
		 "grails-app/assets/**/*spec.js",
		 "src/test/**/*spec.js",
		 "grails-app/assets/**/*Spec.js",
		 "src/test/**/*Spec.js",
		 "grails-app/assets/**/test/**/*.js",
		 "src/test/**/test/**/*.js",
		 "grails-app/assets/**/tests/**/*.js",
		 "src/test/**/tests/**/*.js",
		 "grails-app/assets/**/mock/**/*.js",
		 "src/test/**/mock/**/*.js",
		 "grails-app/assets/**/spec/**/*.js",
		 "src/test/**/spec/**/*.js"
	]
	
	exclude = ['grails-app/assets/bower/datatables.net-bs/dataTables.bootstrap.js']
	
	//  This is needed to see what files are used at runtime
	logLevel = 'config.LOG_DEBUG'
	
    preprocessors = ['grails-app/assets/javascripts/**/*.js': ['wrap']]
	 
    wrapPreprocessor = [template: "(function () { 'use strict';  <%= contents %> })()"]
}

assets {
    minifyJs = true
    minifyCss = true
}

grails {
    pathingJar = true
}

//  We need to configure this here as by default bamboo will use war.basename and that will be the Bamboo generated root of the project.
jar.archiveName="mms.jar"

/*bootRun {
 jvmArgs = ["-Xmx1024m"]
}*/
